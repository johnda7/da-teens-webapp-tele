import { useState, useEffect } from 'react'
import { motion } from 'framer-motion'
import { Brain, Heart, Zap, Target, TrendingUp } from 'lucide-react'

interface EmotionalState {
  mood: number // 1-5
  anxiety: number // 1-5
  energy: number // 1-5
  stress: number // 1-5
}

interface Recommendation {
  id: string
  type: 'lesson' | 'practice' | 'break' | 'checkin'
  title: string
  description: string
  reason: string
  estimatedTime: number
  emotionalBenefit: string
  icon: any
  priority: 'high' | 'medium' | 'low'
}

interface AdaptiveRecommendationProps {
  emotionalState: EmotionalState
  completedLessons: string[]
  onRecommendationSelect: (recommendation: Recommendation) => void
}

export default function AdaptiveRecommendation({ 
  emotionalState, 
  completedLessons,
  onRecommendationSelect 
}: AdaptiveRecommendationProps) {
  const [recommendations, setRecommendations] = useState<Recommendation[]>([])
  const [isAnalyzing, setIsAnalyzing] = useState(true)

  // AI-powered recommendation engine
  useEffect(() => {
    const generateRecommendations = () => {
      setIsAnalyzing(true)
      
      // Simulate AI analysis delay
      setTimeout(() => {
        const newRecommendations: Recommendation[] = []
        
        // Analyze emotional state
        const { mood, anxiety, energy, stress } = emotionalState
        
        // High anxiety + low energy = calming practice
        if (anxiety >= 4 && energy <= 2) {
          newRecommendations.push({
            id: 'breathing-practice',
            type: 'practice',
            title: '–î—ã—Ö–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞',
            description: '5-–º–∏–Ω—É—Ç–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Ç—Ä–µ–≤–æ–≥–∏',
            reason: '–¢–≤–æ—è —Ç—Ä–µ–≤–æ–≥–∞ –ø–æ–≤—ã—à–µ–Ω–∞, –∞ —ç–Ω–µ—Ä–≥–∏—è –Ω–∏–∑–∫–∞—è. –î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ–º–æ–≥—É—Ç —É—Å–ø–æ–∫–æ–∏—Ç—å—Å—è.',
            estimatedTime: 5,
            emotionalBenefit: '–°–Ω–∏–∂–µ–Ω–∏–µ —Ç—Ä–µ–≤–æ–≥–∏ –Ω–∞ 40%',
            icon: Heart,
            priority: 'high'
          })
        }
        
        // Low mood = uplifting content
        if (mood <= 2) {
          newRecommendations.push({
            id: 'positive-lesson',
            type: 'lesson',
            title: '–£—Ä–æ–∫: –°–∏–ª–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏',
            description: '–ö–æ—Ä–æ—Ç–∫–∏–π —É—Ä–æ–∫ –æ —Ç–æ–º, –∫–∞–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –º–µ–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ',
            reason: '–¢–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –æ—á–µ–Ω—å. –≠—Ç–æ—Ç —É—Ä–æ–∫ –ø–æ–º–æ–∂–µ—Ç –ø–æ–¥–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.',
            estimatedTime: 10,
            emotionalBenefit: '–£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –Ω–∞ 60%',
            icon: Brain,
            priority: 'high'
          })
        }
        
        // High energy + good mood = challenging content
        if (energy >= 4 && mood >= 3) {
          newRecommendations.push({
            id: 'advanced-boundaries',
            type: 'lesson',
            title: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –≥—Ä–∞–Ω–∏—Ü',
            description: '–°–ª–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏ –∏—Ö —Ä–µ—à–µ–Ω–∏—è',
            reason: '–£ —Ç–µ–±—è –º–Ω–æ–≥–æ —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! –í—Ä–µ–º—è –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.',
            estimatedTime: 15,
            emotionalBenefit: '–†–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤ –Ω–∞ 80%',
            icon: Target,
            priority: 'medium'
          })
        }
        
        // High stress = break recommendation
        if (stress >= 4) {
          newRecommendations.push({
            id: 'mindful-break',
            type: 'break',
            title: '–û—Å–æ–∑–Ω–∞–Ω–Ω–∞—è –ø–∞—É–∑–∞',
            description: '3-–º–∏–Ω—É—Ç–Ω–∞—è –º–µ–¥–∏—Ç–∞—Ü–∏—è –¥–ª—è —Å–Ω—è—Ç–∏—è —Å—Ç—Ä–µ—Å—Å–∞',
            reason: '–¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ –≤—ã—Å–æ–∫–∏–π. –°–¥–µ–ª–∞–π –ø–∞—É–∑—É –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏ —Å–∏–ª—ã.',
            estimatedTime: 3,
            emotionalBenefit: '–°–Ω–∏–∂–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–∞ –Ω–∞ 50%',
            icon: Zap,
            priority: 'high'
          })
        }
        
        // Default: continue learning
        if (newRecommendations.length === 0) {
          newRecommendations.push({
            id: 'continue-learning',
            type: 'lesson',
            title: '–ü—Ä–æ–¥–æ–ª–∂–∏ –æ–±—É—á–µ–Ω–∏–µ',
            description: '–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫ –≤ —Ç–≤–æ–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ',
            reason: '–¢–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ. –û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–±—É—á–µ–Ω–∏—è!',
            estimatedTime: 12,
            emotionalBenefit: '–ü—Ä–æ–≥—Ä–µ—Å—Å –≤ –Ω–∞–≤—ã–∫–∞—Ö',
            icon: TrendingUp,
            priority: 'medium'
          })
        }
        
        setRecommendations(newRecommendations)
        setIsAnalyzing(false)
      }, 1500) // Simulate AI processing time
    }

    generateRecommendations()
  }, [emotionalState])

  if (isAnalyzing) {
    return (
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        className="bg-white/70 backdrop-blur-[40px] rounded-2xl border border-white/20 p-6"
      >
        <div className="text-center">
          <motion.div
            animate={{ rotate: 360 }}
            transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
            className="w-8 h-8 border-2 border-blue-500 border-t-transparent rounded-full mx-auto mb-4"
          />
          <h3 className="font-semibold text-gray-900 mb-2">
            –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ...
          </h3>
          <p className="text-sm text-gray-600">
            AI –ø–æ–¥–±–∏—Ä–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ–±—è
          </p>
        </div>
      </motion.div>
    )
  }

  return (
    <div className="space-y-4">
      <div className="text-center mb-6">
        <h2 className="text-xl font-semibold text-gray-900 mb-2">
          üß† –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        </h2>
        <p className="text-sm text-gray-600">
          AI –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª —Ç–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–æ–¥–æ–±—Ä–∞–ª –∏–¥–µ–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        </p>
      </div>

      {recommendations.map((rec, index) => {
        const Icon = rec.icon
        
        return (
          <motion.div
            key={rec.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.1 }}
            className={`
              bg-white/70 backdrop-blur-[40px] rounded-2xl border border-white/20 p-6 cursor-pointer
              hover:scale-[1.02] hover:-translate-y-1 transition-all duration-200
              ${rec.priority === 'high' ? 'ring-2 ring-orange-500/20' : ''}
            `}
            onClick={() => onRecommendationSelect(rec)}
          >
            <div className="flex items-start gap-4">
              <div className={`
                p-3 rounded-xl
                ${rec.priority === 'high' ? 'bg-orange-100' : 
                  rec.priority === 'medium' ? 'bg-blue-100' : 'bg-gray-100'}
              `}>
                <Icon 
                  size={24} 
                  className={`
                    ${rec.priority === 'high' ? 'text-orange-600' : 
                      rec.priority === 'medium' ? 'text-blue-600' : 'text-gray-600'}
                  `} 
                />
              </div>
              
              <div className="flex-1">
                <div className="flex items-center gap-2 mb-2">
                  <h3 className="font-semibold text-gray-900">
                    {rec.title}
                  </h3>
                  {rec.priority === 'high' && (
                    <span className="px-2 py-1 bg-orange-100 text-orange-600 text-xs rounded-full">
                      –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
                    </span>
                  )}
                </div>
                
                <p className="text-sm text-gray-600 mb-3">
                  {rec.description}
                </p>
                
                <div className="bg-blue-50 rounded-lg p-3 mb-3">
                  <p className="text-xs text-blue-800 font-medium mb-1">
                    üí° –ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ —ç—Ç–æ:
                  </p>
                  <p className="text-xs text-blue-700">
                    {rec.reason}
                  </p>
                </div>
                
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-4 text-xs text-gray-500">
                    <span>‚è±Ô∏è {rec.estimatedTime} –º–∏–Ω</span>
                    <span>üìà {rec.emotionalBenefit}</span>
                  </div>
                  
                  <motion.div
                    whileHover={{ scale: 1.1 }}
                    className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center"
                  >
                    <span className="text-white text-sm">‚Üí</span>
                  </motion.div>
                </div>
              </div>
            </div>
          </motion.div>
        )
      })}
    </div>
  )
}
