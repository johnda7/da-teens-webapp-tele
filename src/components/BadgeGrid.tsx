import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Progress } from '@/components/ui/progress'
import { Trophy, Star, CheckCircle, Flame, Target } from '@phosphor-icons/react'

interface BadgeGridProps {
  userBadges: string[]
}

const availableBadges = [
  {
    id: 'first-step',
    title: '–ü–µ—Ä–≤—ã–π —à–∞–≥',
    description: '–ü—Ä–æ—à—ë–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –Ω–∞—á–∞–ª –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ',
    icon: 'üéØ',
    color: 'bg-blue-100 border-blue-300 text-blue-800',
    criteria: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏'
  },
  {
    id: 'check-in-streak-7',
    title: '–ù–µ–¥–µ–ª—è –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏',
    description: '7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ –¥–µ–ª–∞–ª —á–µ–∫-–∏–Ω—ã',
    icon: 'üî•',
    color: 'bg-orange-100 border-orange-300 text-orange-800',
    criteria: '–°–¥–µ–ª–∞—Ç—å —á–µ–∫-–∏–Ω 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥'
  },
  {
    id: 'module-complete',
    title: '–ü–æ–∫–æ—Ä–∏—Ç–µ–ª—å –º–æ–¥—É–ª—è',
    description: '–ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–∏–ª –ø–µ—Ä–≤—ã–π –º–æ–¥—É–ª—å',
    icon: 'üìö',
    color: 'bg-green-100 border-green-300 text-green-800',
    criteria: '–ó–∞–≤–µ—Ä—à–∏—Ç—å –ª—é–±–æ–π –º–æ–¥—É–ª—å'
  },
  {
    id: 'practice-master',
    title: '–ú–∞—Å—Ç–µ—Ä –ø—Ä–∞–∫—Ç–∏–∫',
    description: '–í—ã–ø–æ–ª–Ω–∏–ª 20 –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫',
    icon: 'üßò',
    color: 'bg-purple-100 border-purple-300 text-purple-800',
    criteria: '–í—ã–ø–æ–ª–Ω–∏—Ç—å 20 –ø—Ä–∞–∫—Ç–∏–∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏'
  },
  {
    id: 'reflection-writer',
    title: '–ú—ã—Å–ª–∏—Ç–µ–ª—å',
    description: '–ù–∞–ø–∏—Å–∞–ª 15 —Ä–µ—Ñ–ª–µ–∫—Å–∏–π',
    icon: '‚úçÔ∏è',
    color: 'bg-indigo-100 border-indigo-300 text-indigo-800',
    criteria: '–ù–∞–ø–∏—Å–∞—Ç—å 15 —Ä–µ—Ñ–ª–µ–∫—Å–∏–π'
  },
  {
    id: 'community-helper',
    title: '–ü–æ–º–æ—â–Ω–∏–∫ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
    description: '–ê–∫—Ç–∏–≤–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç –¥—Ä—É–≥–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º',
    icon: 'ü§ù',
    color: 'bg-pink-100 border-pink-300 text-pink-800',
    criteria: '–ü–æ–ª—É—á–∏—Ç—å 10 –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π –æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'
  },
  {
    id: 'goal-achiever',
    title: '–î–æ—Å—Ç–∏–≥–∞—Ç–æ—Ä —Ü–µ–ª–µ–π',
    description: '–í—ã–ø–æ–ª–Ω–∏–ª –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –º–µ—Å—è—Ü–∞',
    icon: 'üéØ',
    color: 'bg-emerald-100 border-emerald-300 text-emerald-800',
    criteria: '–í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞'
  },
  {
    id: 'anxiety-warrior',
    title: '–ë–æ—Ä–µ—Ü —Å —Ç—Ä–µ–≤–æ–≥–æ–π',
    description: '–°–Ω–∏–∑–∏–ª —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–≥–∏ –Ω–∞ 3 –ø—É–Ω–∫—Ç–∞',
    icon: 'üí™',
    color: 'bg-yellow-100 border-yellow-300 text-yellow-800',
    criteria: '–£–º–µ–Ω—å—à–∏—Ç—å —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–≥–∏ –Ω–∞ 3 –ø—É–Ω–∫—Ç–∞'
  },
  {
    id: 'early-bird',
    title: '–†–∞–Ω–Ω—è—è –ø—Ç–∞—à–∫–∞',
    description: '–î–µ–ª–∞–ª —É—Ç—Ä–µ–Ω–Ω–∏–µ —á–µ–∫-–∏–Ω—ã 14 –¥–Ω–µ–π',
    icon: 'üåÖ',
    color: 'bg-cyan-100 border-cyan-300 text-cyan-800',
    criteria: '–ß–µ–∫-–∏–Ω—ã –¥–æ 9:00 —É—Ç—Ä–∞ 14 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥'
  },
  {
    id: 'dream-guardian',
    title: '–•—Ä–∞–Ω–∏—Ç–µ–ª—å —Å–Ω–æ–≤',
    description: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–ª –∑–¥–æ—Ä–æ–≤—ã–π —Å–æ–Ω 30 –¥–Ω–µ–π',
    icon: 'üåô',
    color: 'bg-violet-100 border-violet-300 text-violet-800',
    criteria: '–°–ø–∞—Ç—å 7-9 —á–∞—Å–æ–≤ 30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥'
  }
]

export default function BadgeGrid({ userBadges }: BadgeGridProps) {
  const earnedBadges = availableBadges.filter(badge => userBadges.includes(badge.id))
  const lockedBadges = availableBadges.filter(badge => !userBadges.includes(badge.id))
  
  const progress = Math.round((earnedBadges.length / availableBadges.length) * 100)

  return (
    <div className="space-y-6">
      {/* Progress Overview */}
      <Card className="bg-gradient-to-r from-yellow-50 to-orange-50 border-yellow-200">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Trophy className="w-6 h-6 text-yellow-600" weight="fill" />
            –¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
          </CardTitle>
          <CardDescription>
            {earnedBadges.length} –∏–∑ {availableBadges.length} –Ω–∞–≥—Ä–∞–¥ –ø–æ–ª—É—á–µ–Ω–æ
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex justify-between items-center">
            <span className="text-sm font-medium">–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
            <span className="text-2xl font-bold text-yellow-600">{progress}%</span>
          </div>
          <Progress value={progress} className="h-3" />
          
          {earnedBadges.length > 0 && (
            <div className="flex items-center gap-2">
              <Star className="w-4 h-4 text-yellow-500" weight="fill" />
              <span className="text-sm text-muted-foreground">
                –ü–æ—Å–ª–µ–¥–Ω—è—è –Ω–∞–≥—Ä–∞–¥–∞: {earnedBadges[earnedBadges.length - 1]?.title}
              </span>
            </div>
          )}
        </CardContent>
      </Card>

      {/* Earned Badges */}
      {earnedBadges.length > 0 && (
        <div>
          <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
            <CheckCircle className="w-5 h-5 text-green-600" weight="fill" />
            –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã ({earnedBadges.length})
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {earnedBadges.map((badge) => (
              <Card key={badge.id} className={`${badge.color} relative overflow-hidden`}>
                <div className="absolute top-2 right-2">
                  <CheckCircle className="w-5 h-5 text-green-600" weight="fill" />
                </div>
                <CardHeader className="pb-3">
                  <div className="flex items-start gap-3">
                    <div className="text-3xl">{badge.icon}</div>
                    <div className="flex-1">
                      <CardTitle className="text-base">{badge.title}</CardTitle>
                      <CardDescription className="text-sm mt-1">
                        {badge.description}
                      </CardDescription>
                    </div>
                  </div>
                </CardHeader>
                <CardContent className="pt-0">
                  <Badge variant="secondary" className="text-xs">
                    –ü–æ–ª—É—á–µ–Ω–æ ‚ú®
                  </Badge>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      )}

      {/* Available Badges */}
      <div>
        <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
          <Target className="w-5 h-5 text-muted-foreground" />
          –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã ({lockedBadges.length})
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {lockedBadges.map((badge) => (
            <Card key={badge.id} className="opacity-60 border-dashed">
              <CardHeader className="pb-3">
                <div className="flex items-start gap-3">
                  <div className="text-3xl grayscale">{badge.icon}</div>
                  <div className="flex-1">
                    <CardTitle className="text-base text-muted-foreground">
                      {badge.title}
                    </CardTitle>
                    <CardDescription className="text-sm mt-1">
                      {badge.description}
                    </CardDescription>
                  </div>
                </div>
              </CardHeader>
              <CardContent className="pt-0">
                <div className="space-y-2">
                  <Badge variant="outline" className="text-xs">
                    –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å:
                  </Badge>
                  <p className="text-xs text-muted-foreground">
                    {badge.criteria}
                  </p>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>

      {/* Next Badge Suggestion */}
      {lockedBadges.length > 0 && (
        <Card className="bg-accent/10 border-accent/30">
          <CardHeader>
            <CardTitle className="text-lg">–°–ª–µ–¥—É—é—â–∞—è —Ü–µ–ª—å</CardTitle>
            <CardDescription>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–ª—É—á–∏—Ç—å</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="flex items-center gap-3">
              <div className="text-2xl">{lockedBadges[0].icon}</div>
              <div className="flex-1">
                <h4 className="font-medium">{lockedBadges[0].title}</h4>
                <p className="text-sm text-muted-foreground">{lockedBadges[0].criteria}</p>
              </div>
              <Badge className="bg-accent/20 text-accent-foreground">
                –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å
              </Badge>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  )
}