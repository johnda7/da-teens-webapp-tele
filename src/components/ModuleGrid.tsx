import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Button } from '@/components/ui/button'
import { Progress } from '@/components/ui/progress'
import { CheckCircle, Lock, Play } from '@phosphor-icons/react'

interface ModuleGridProps {
  currentModule: number
  onModuleSelect: (moduleId: number) => void
}

const modules = [
  { id: 1, title: '–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å', description: '–°–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏–µ, —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã, —Ä–∞–±–æ—Ç–∞ —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –∫—Ä–∏—Ç–∏–∫–æ–º', color: 'bg-blue-50 border-blue-200', icon: 'üí™' },
  { id: 2, title: '–î—Ä—É–∂–±–∞', description: '–≠–º–ø–∞—Ç–∏—è, –¥–æ–≤–µ—Ä–∏–µ, –≥—Ä–∞–Ω–∏—Ü—ã, –∑–¥–æ—Ä–æ–≤—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è', color: 'bg-green-50 border-green-200', icon: 'ü§ù' },
  { id: 3, title: '–û–±—â–µ–Ω–∏–µ', description: '–Ø-—Å–æ–æ–±—â–µ–Ω–∏—è, –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–ª—É—à–∞–Ω–∏–µ, —É–±–µ–∂–¥–µ–Ω–∏–µ', color: 'bg-purple-50 border-purple-200', icon: 'üí¨' },
  { id: 4, title: '–°—Ç—Ä–µ—Å—Å-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç', description: '–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏, —Ç–µ–ª–µ—Å–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏', color: 'bg-orange-50 border-orange-200', icon: 'üßò' },
  { id: 5, title: '–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞', description: '–ü—Ä–∏–Ω—è—Ç–∏–µ —Å–µ–±—è, —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–º–ø–ª–µ–∫—Å–∞–º–∏', color: 'bg-pink-50 border-pink-200', icon: '‚ú®' },
  { id: 6, title: '–¢–∞–π–º-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç', description: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã, —Ñ–æ–∫—É—Å, —É—á–µ–±–Ω—ã–µ —Ä–∏—Ç—É–∞–ª—ã', color: 'bg-indigo-50 border-indigo-200', icon: '‚è∞' },
  { id: 7, title: '–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å', description: '–ë–∞–∑–æ–≤—ã–π –±—é–¥–∂–µ—Ç, —Ü–µ–ª–∏, –ø—Ä–æ–µ–∫—Ç—ã', color: 'bg-emerald-50 border-emerald-200', icon: 'üí∞' },
  { id: 8, title: '–ö–∞—Ä—å–µ—Ä–Ω—ã–π –ø—É—Ç—å', description: '–ò–Ω—Ç–µ—Ä–µ—Å—ã, —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã, –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è', color: 'bg-yellow-50 border-yellow-200', icon: 'üéØ' },
  { id: 9, title: '–¶–∏—Ñ—Ä–æ–≤–∞—è –≥–∏–≥–∏–µ–Ω–∞', description: '–°–æ—Ü—Å–µ—Ç–∏, —Å–∫—Ä–æ–ª–ª-–¥–µ—Ç–æ–∫—Å, –∫–∏–±–µ—Ä–±—É–ª–ª–∏–Ω–≥', color: 'bg-cyan-50 border-cyan-200', icon: 'üì±' },
  { id: 10, title: '–ó–¥–æ—Ä–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏', description: '–°–æ–Ω, –ø–∏—Ç–∞–Ω–∏–µ, –¥–≤–∏–∂–µ–Ω–∏–µ, —ç–∫—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è', color: 'bg-teal-50 border-teal-200', icon: 'üå±' },
  { id: 11, title: '–ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π', description: '–ê–Ω–∞–ª–∏–∑ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π, —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã', color: 'bg-red-50 border-red-200', icon: 'ü§î' },
  { id: 12, title: '–£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å', description: '–†–∞–±–æ—Ç–∞ —Å –æ—à–∏–±–∫–∞–º–∏, –ø–ª–∞–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è', color: 'bg-violet-50 border-violet-200', icon: 'üõ°Ô∏è' },
]

export default function ModuleGrid({ currentModule, onModuleSelect }: ModuleGridProps) {
  const getModuleStatus = (moduleId: number) => {
    if (moduleId < currentModule) return 'completed'
    if (moduleId === currentModule) return 'current'
    return 'locked'
  }

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'completed':
        return <CheckCircle className="w-5 h-5 text-green-600" weight="fill" />
      case 'current':
        return <Play className="w-5 h-5 text-primary" weight="fill" />
      default:
        return <Lock className="w-5 h-5 text-gray-400" />
    }
  }

  const getStatusBadge = (status: string) => {
    switch (status) {
      case 'completed':
        return <Badge className="bg-green-100 text-green-800 border-green-300">–ó–∞–≤–µ—Ä—à–µ–Ω</Badge>
      case 'current':
        return <Badge className="bg-primary/10 text-primary border-primary/30">–¢–µ–∫—É—â–∏–π</Badge>
      default:
        return <Badge variant="secondary">–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</Badge>
    }
  }

  return (
    <div className="space-y-6">
      {/* Current Module Highlight */}
      <Card className="bg-gradient-to-r from-primary/10 to-accent/10 border-primary/20">
        <CardContent className="p-6">
          <div className="flex items-center justify-between">
            <div>
              <h3 className="text-lg font-semibold text-foreground">–¢–µ–∫—É—â–∏–π –º–æ–¥—É–ª—å</h3>
              <p className="text-2xl font-bold text-primary mt-1">
                {modules.find(m => m.id === currentModule)?.title || '–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'}
              </p>
              <p className="text-muted-foreground mt-1">
                {modules.find(m => m.id === currentModule)?.description}
              </p>
            </div>
            <Button 
              size="lg" 
              onClick={() => onModuleSelect(currentModule)}
              className="gap-2"
            >
              <Play className="w-4 h-4" weight="fill" />
              –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* All Modules Grid */}
      <div>
        <h3 className="text-lg font-semibold mb-4">–í—Å–µ –º–æ–¥—É–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {modules.map((module) => {
            const status = getModuleStatus(module.id)
            const isClickable = status === 'current' || status === 'completed'
            
            return (
              <Card 
                key={module.id} 
                className={`${module.color} ${isClickable ? 'cursor-pointer hover:shadow-md' : 'opacity-60'} transition-all duration-200`}
                onClick={() => isClickable && onModuleSelect(module.id)}
              >
                <CardHeader className="pb-3">
                  <div className="flex items-start justify-between">
                    <div className="text-3xl mb-2">{module.icon}</div>
                    {getStatusIcon(status)}
                  </div>
                  <div className="space-y-1">
                    <CardTitle className="text-base">{module.title}</CardTitle>
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-muted-foreground">–ú–æ–¥—É–ª—å {module.id}</span>
                      {getStatusBadge(status)}
                    </div>
                  </div>
                </CardHeader>
                <CardContent className="pt-0">
                  <CardDescription className="text-sm leading-relaxed">
                    {module.description}
                  </CardDescription>
                  {status === 'completed' && (
                    <div className="mt-3 space-y-2">
                      <div className="flex justify-between text-sm">
                        <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                        <span className="font-medium">100%</span>
                      </div>
                      <Progress value={100} className="h-2" />
                    </div>
                  )}
                  {status === 'current' && (
                    <div className="mt-3 space-y-2">
                      <div className="flex justify-between text-sm">
                        <span>–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                        <span className="font-medium">33%</span>
                      </div>
                      <Progress value={33} className="h-2" />
                    </div>
                  )}
                </CardContent>
              </Card>
            )
          })}
        </div>
      </div>
    </div>
  )
}