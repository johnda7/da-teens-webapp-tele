/**
 * Module Grid Widget
 * 
 * FSD Layer: Widgets
 * –°–µ—Ç–∫–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è (12 –±–∞–∑–æ–≤—ã—Ö + –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π)
 */

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Button } from '@/components/ui/button'
import { CheckCircle, Lock, Play, Sparkle } from '@phosphor-icons/react'
import { motion } from 'framer-motion'

interface ModuleGridProps {
  currentModule: number
  completedModules: number[]
  onModuleSelect: (moduleId: number) => void
}

const modules = [
  { id: 1, title: '–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å', description: '–°–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏–µ, —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã', color: 'bg-blue-50 border-blue-200', icon: 'üí™' },
  { id: 2, title: '–î—Ä—É–∂–±–∞', description: '–≠–º–ø–∞—Ç–∏—è, –¥–æ–≤–µ—Ä–∏–µ, –≥—Ä–∞–Ω–∏—Ü—ã', color: 'bg-green-50 border-green-200', icon: 'ü§ù' },
  { id: 3, title: '–û–±—â–µ–Ω–∏–µ', description: '–Ø-—Å–æ–æ–±—â–µ–Ω–∏—è, –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–ª—É—à–∞–Ω–∏–µ', color: 'bg-purple-50 border-purple-200', icon: 'üí¨' },
  { id: 4, title: '–°—Ç—Ä–µ—Å—Å-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç', description: '–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏, –ø—Ä–∞–∫—Ç–∏–∫–∏', color: 'bg-orange-50 border-orange-200', icon: 'üßò' },
  { id: 5, title: '–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞', description: '–ü—Ä–∏–Ω—è—Ç–∏–µ —Å–µ–±—è, –∫–æ–º–ø–ª–µ–∫—Å—ã', color: 'bg-pink-50 border-pink-200', icon: '‚ú®' },
  { id: 6, title: '–¢–∞–π–º-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç', description: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã, —Ñ–æ–∫—É—Å, —Ä–∏—Ç—É–∞–ª—ã', color: 'bg-indigo-50 border-indigo-200', icon: '‚è∞' },
  { id: 7, title: '–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å', description: '–ë—é–¥–∂–µ—Ç, —Ü–µ–ª–∏, –ø—Ä–æ–µ–∫—Ç—ã', color: 'bg-emerald-50 border-emerald-200', icon: 'üí∞' },
  { id: 8, title: '–ö–∞—Ä—å–µ—Ä–Ω—ã–π –ø—É—Ç—å', description: '–ò–Ω—Ç–µ—Ä–µ—Å—ã, –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è', color: 'bg-yellow-50 border-yellow-200', icon: 'üéØ' },
  { id: 9, title: '–¶–∏—Ñ—Ä–æ–≤–∞—è –≥–∏–≥–∏–µ–Ω–∞', description: '–°–æ—Ü—Å–µ—Ç–∏, –∫–∏–±–µ—Ä–±—É–ª–ª–∏–Ω–≥', color: 'bg-cyan-50 border-cyan-200', icon: 'üì±' },
  { id: 10, title: '–ó–¥–æ—Ä–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏', description: '–°–æ–Ω, –ø–∏—Ç–∞–Ω–∏–µ, –¥–≤–∏–∂–µ–Ω–∏–µ', color: 'bg-teal-50 border-teal-200', icon: 'üå±' },
  { id: 11, title: '–ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π', description: '–ê–Ω–∞–ª–∏–∑, —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã', color: 'bg-red-50 border-red-200', icon: 'ü§î' },
  { id: 12, title: '–£—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å', description: '–†–∞–±–æ—Ç–∞ —Å –æ—à–∏–±–∫–∞–º–∏', color: 'bg-violet-50 border-violet-200', icon: 'üõ°Ô∏è' },
  { 
    id: 13, 
    title: '–õ–∏—á–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã', 
    description: 'AI-–∞–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Ç–≤–æ—ë —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Ä¢ 9 —É—Ä–æ–∫–æ–≤',
    color: 'bg-gradient-to-r from-blue-50 to-[#e0f2fe] border-[#007AFF]',
    icon: 'üõ°Ô∏è', 
    isAdaptive: true, 
    badge: 'AI' 
  },
]

export function ModuleGrid({ currentModule, completedModules, onModuleSelect }: ModuleGridProps) {
  const getModuleStatus = (moduleId: number): 'completed' | 'current' | 'available' | 'locked' => {
    if (completedModules.includes(moduleId)) return 'completed'
    if (moduleId === 13) return 'available' // –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –º–æ–¥—É–ª—å –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω
    if (moduleId === currentModule) return 'current'
    if (moduleId < currentModule) return 'available'
    return 'locked'
  }

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'completed':
        return <CheckCircle className="w-5 h-5 text-green-600" weight="fill" />
      case 'current':
        return <Play className="w-5 h-5 text-[#007AFF]" weight="fill" />
      case 'available':
        return <Play className="w-5 h-5 text-gray-400" weight="regular" />
      default:
        return <Lock className="w-5 h-5 text-gray-300" />
    }
  }

  const getStatusBadge = (status: string) => {
    switch (status) {
      case 'completed':
        return <Badge className="bg-green-100 text-green-800 border-green-300">‚úì –ó–∞–≤–µ—Ä—à—ë–Ω</Badge>
      case 'current':
        return <Badge style={{ background: 'rgba(0, 122, 255, 0.1)', color: '#007AFF', border: '1px solid rgba(0, 122, 255, 0.3)' }}>
          ‚ñ∂ –¢–µ–∫—É—â–∏–π
        </Badge>
      case 'available':
        return <Badge variant="secondary">–î–æ—Å—Ç—É–ø–µ–Ω</Badge>
      default:
        return <Badge variant="secondary" className="opacity-50">üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</Badge>
    }
  }

  return (
    <div className="space-y-6">
      {/* Modules Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {modules.map((module, index) => {
          const status = getModuleStatus(module.id)
          const isDisabled = status === 'locked'
          
          return (
            <motion.div
              key={module.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.05 }}
            >
              <Card 
                className={`
                  ${module.color} 
                  ${isDisabled ? 'opacity-60 cursor-not-allowed' : 'cursor-pointer hover:shadow-lg'} 
                  transition-all duration-200
                  ${module.isAdaptive ? 'border-2 shadow-md' : ''}
                  ${status === 'current' ? 'ring-2 ring-[#007AFF] ring-offset-2' : ''}
                `}
                onClick={() => !isDisabled && onModuleSelect(module.id)}
              >
                <CardHeader>
                  <div className="flex items-start justify-between">
                    <div className="flex items-center gap-2">
                      <span className="text-3xl">{module.icon}</span>
                      <div>
                        <CardTitle className="text-base flex items-center gap-2">
                          {module.title}
                          {module.badge && (
                            <Badge 
                              variant="outline" 
                              className="text-xs"
                              style={{ 
                                background: 'linear-gradient(135deg, #007AFF 0%, #5AC8FA 100%)',
                                color: 'white',
                                border: 'none'
                              }}
                            >
                              {module.badge}
                            </Badge>
                          )}
                        </CardTitle>
                      </div>
                    </div>
                    {getStatusIcon(status)}
                  </div>
                </CardHeader>
                <CardContent>
                  <CardDescription className="text-xs mb-3">
                    {module.description}
                  </CardDescription>
                  
                  <div className="flex items-center justify-between">
                    {getStatusBadge(status)}
                    
                    {module.isAdaptive && (
                      <div className="flex items-center gap-1 text-xs text-[#007AFF]">
                        <Sparkle className="w-3 h-3" weight="fill" />
                        <span>–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π</span>
                      </div>
                    )}
                  </div>
                </CardContent>
              </Card>
            </motion.div>
          )
        })}
      </div>

      {/* Legend */}
      <Card className="backdrop-blur-xl bg-white/50">
        <CardContent className="p-4">
          <div className="flex flex-wrap gap-4 text-xs text-muted-foreground">
            <div className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-600" weight="fill" />
              <span>–ó–∞–≤–µ—Ä—à—ë–Ω</span>
            </div>
            <div className="flex items-center gap-2">
              <Play className="w-4 h-4 text-[#007AFF]" weight="fill" />
              <span>–¢–µ–∫—É—â–∏–π</span>
            </div>
            <div className="flex items-center gap-2">
              <Play className="w-4 h-4 text-gray-400" />
              <span>–î–æ—Å—Ç—É–ø–µ–Ω</span>
            </div>
            <div className="flex items-center gap-2">
              <Lock className="w-4 h-4 text-gray-300" />
              <span>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</span>
            </div>
            <div className="flex items-center gap-2">
              <Sparkle className="w-4 h-4 text-[#007AFF]" weight="fill" />
              <span>AI-–∞–¥–∞–ø—Ç–∞—Ü–∏—è</span>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

export default ModuleGrid
